// 도전과제2 PWM 직접구현 (period = 10ms 고정)
// 회로: 5V → 220Ω → LED → GPIO7
// 특성: LOW = 켜짐, HIGH = 꺼짐 (싱크 방식)

const int LED_PIN = 7;
const unsigned int period_us = 100;  // 10ms 고정
volatile int duty_percent = 0;         // 0~100 (%)

// duty 설정 함수
void set_duty(int duty) {
  if (duty < 0)   duty = 0;
  if (duty > 100) duty = 100;
  duty_percent = duty;
}

// PWM 1사이클 (10ms)
void pwm_cycle() {
  unsigned int on_time_low   = (unsigned long)period_us * duty_percent / 100;
  unsigned int off_time_high = period_us - on_time_low;

  if (on_time_low > 0) {
    digitalWrite(LED_PIN, LOW);   // 켜짐
    delayMicroseconds(on_time_low);
  }
  if (off_time_high > 0) {
    digitalWrite(LED_PIN, HIGH);  // 꺼짐
    delayMicroseconds(off_time_high);
  }
}

void setup() {
  pinMode(LED_PIN, OUTPUT);
  digitalWrite(LED_PIN, HIGH);    // 기본 꺼짐
}

void loop() {
  // 전체 202단계(0→100→0)가 합쳐서 약 1초가 되도록 조절
  const unsigned long total_steps = 202UL;
  unsigned long step_us = 1000000UL / total_steps;         // 단계당 시간 ≈ 4950 µs
  unsigned int cycles_per_step = (unsigned int)(step_us / period_us);
  if (cycles_per_step < 1) cycles_per_step = 1;            // 최소 1사이클 보장

  // 상승: 0 → 100%
  for (int d = 0; d <= 100; d++) {
    set_duty(d);
    for (unsigned int i = 0; i < cycles_per_step; i++) pwm_cycle();
  }
  // 하강: 100 → 0%
  for (int d = 100; d >= 0; d--) {
    set_duty(d);
    for (unsigned int i = 0; i < cycles_per_step; i++) pwm_cycle();
  }
}
